<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AC之路 on Runtime: out of memory</title>
    <link>/categories/ac%E4%B9%8B%E8%B7%AF/</link>
    <description>Recent content in AC之路 on Runtime: out of memory</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Jun 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/ac%E4%B9%8B%E8%B7%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AC之路 序</title>
      <link>/blog/ac%E4%B9%8B%E8%B7%AF-%E5%BA%8F/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/ac%E4%B9%8B%E8%B7%AF-%E5%BA%8F/</guid>
      <description>不知不觉就要到大三了，也玩过很多东西，但总感觉缺乏新的挑战，到达了一个瓶颈。 于是想要隐居深山，闭关修炼，回到计算机的本源，更多跟深地去死磕自</description>
    </item>
    
    <item>
      <title>POJ 1979 Red and Black</title>
      <link>/blog/poj-1979-red-and-black/</link>
      <pubDate>Thu, 28 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/blog/poj-1979-red-and-black/</guid>
      <description>涉及知识点：DFS solution #include &amp;lt;cstdio&amp;gt; int W, H; char tile[25][25]; int pos_x, pos_y; int sh_x[4] = {0, 0, -1, 1}; int sh_y[4] = {1, -1, 0, 0}; int res = 0; void solve(int x, int y) { tile[y][x] = &#39;#&#39;; //printf(&amp;quot;In x:%d y:%d\n&amp;quot;, x,y); res++; for (int i=0;i&amp;lt;4;i++) { int new_x = x + sh_x[i]; int new_y = y + sh_y[i]; if (new_x</description>
    </item>
    
  </channel>
</rss>